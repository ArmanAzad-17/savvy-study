service: savvy-service

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  stage: test
  region: us-east-1

plugins:
  - serverless-appsync-plugin

custom:
  appSync:
    name: ${self:service}-appsync-${self:provider.stage}
    authenticationType: API_KEY # since we don't have user login for now
    mappingTemplates:      
      - type: Query
        field: getMessage
        dataSource: testAppsyncFunction
        request: false
        response: false
      - type: Query
        field: listUsers
        dataSource: testAppsyncFunction
        request: false
        response: false
    dataSources:        
      - type: AWS_LAMBDA
        name: testAppsyncFunction
        config:
          functionName: appSyncGraphqlResolvers

functions:
  appSyncGraphqlResolvers:
    handler: app/graphql.handler

  getUsers:
    handler: app/getUsers.handler
    events:
      - http:
          path: /users
          method: GET


resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: gamesTable
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK # partition key
            KeyType: HASH
          - AttributeName: SK # sort key
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1